From 9b6e7f8c5d4e3f2e1a0b9c8d7e6f5a4b3c2d1e0f Mon Sep 17 00:00:00 2001
From: Andrii Shchupliak <andrii.shchupliak@example.com>
Date: Mon, 20 Jan 2025 14:35:00 -0800
Subject: [PATCH] Update UI features to use Grazie feature flag

This patch updates the UI features to use the new kGraziePanel feature flag
instead of the old kThirdPartyLlmPanel flag.

---
 chrome/browser/ui/browser_actions.cc              |  6 +++---
 chrome/browser/ui/toolbar/toolbar_pref_names.cc   |  4 ++--
 chrome/browser/ui/ui_features.cc                   |  4 ++--
 chrome/browser/ui/ui_features.h                    |  2 +-
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/chrome/browser/ui/browser_actions.cc b/chrome/browser/ui/browser_actions.cc
index 38faf665d..d7c9a2e8b 100644
--- a/chrome/browser/ui/browser_actions.cc
+++ b/chrome/browser/ui/browser_actions.cc
@@ -231,9 +231,9 @@ void BrowserActions::InitializeBrowserActions() {
             .Build());
   }
 
-  // Add third-party LLM panel if feature is enabled
-  if (base::FeatureList::IsEnabled(features::kThirdPartyLlmPanel)) {
+  // Add Grazie panel if feature is enabled
+  if (base::FeatureList::IsEnabled(features::kGraziePanel)) {
     root_action_item_->AddChild(
-        SidePanelAction(SidePanelEntryId::kThirdPartyLlm,
+        SidePanelAction(SidePanelEntryId::kGrazie,
                         IDS_THIRD_PARTY_LLM_TITLE,  // Will be updated to use Grazie strings
                         IDS_THIRD_PARTY_LLM_TITLE,
                         vector_icons::kHandGestureIcon,
diff --git a/chrome/browser/ui/toolbar/toolbar_pref_names.cc b/chrome/browser/ui/toolbar/toolbar_pref_names.cc
index 4dd749643..e5c3b8f34 100644
--- a/chrome/browser/ui/toolbar/toolbar_pref_names.cc
+++ b/chrome/browser/ui/toolbar/toolbar_pref_names.cc
@@ -33,8 +33,8 @@ void RegisterProfilePrefs(user_prefs::PrefRegistrySyncable* registry) {
     }
   }
 
-  // Add third-party LLM panel to default pinned actions
-  if (base::FeatureList::IsEnabled(features::kThirdPartyLlmPanel)) {
+  // Add Grazie panel to default pinned actions
+  if (base::FeatureList::IsEnabled(features::kGraziePanel)) {
     const std::optional<std::string>& third_party_llm_action =
         actions::ActionIdMap::ActionIdToString(kActionSidePanelShowThirdPartyLlm);
     if (third_party_llm_action.has_value()) {
diff --git a/chrome/browser/ui/ui_features.cc b/chrome/browser/ui/ui_features.cc
index 6b7f69f03..f4e8b1a2c 100644
--- a/chrome/browser/ui/ui_features.cc
+++ b/chrome/browser/ui/ui_features.cc
@@ -137,8 +137,8 @@ BASE_FEATURE(kSidePanelResizing,
              "SidePanelResizing",
              base::FEATURE_DISABLED_BY_DEFAULT);
 
-BASE_FEATURE(kThirdPartyLlmPanel,
-             "ThirdPartyLlmPanel",
+BASE_FEATURE(kGraziePanel,
+             "GraziePanel",
              base::FEATURE_ENABLED_BY_DEFAULT);
 
 BASE_FEATURE(kTabDuplicateMetrics,
diff --git a/chrome/browser/ui/ui_features.h b/chrome/browser/ui/ui_features.h
index 6ebeab862..8a7b2d1f9 100644
--- a/chrome/browser/ui/ui_features.h
+++ b/chrome/browser/ui/ui_features.h
@@ -110,7 +110,7 @@ extern const char kTabScrollingButtonPositionParameterName[];
 
 BASE_DECLARE_FEATURE(kSidePanelResizing);
 BASE_DECLARE_FEATURE(kSidePanelSearchCompanion);
-BASE_DECLARE_FEATURE(kThirdPartyLlmPanel);
+BASE_DECLARE_FEATURE(kGraziePanel);
 
 BASE_DECLARE_FEATURE(kTabGroupsCollapseFreezing);
 
-- 
2.39.0 