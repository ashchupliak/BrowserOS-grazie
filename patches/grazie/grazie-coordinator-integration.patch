From 8a5d231f4b1c4d8e9c6a0b4e3f2d8c9e5a6b1c2d Mon Sep 17 00:00:00 2001
From: Andrii Shchupliak <andrii.shchupliak@example.com>
Date: Mon, 20 Jan 2025 14:30:00 -0800
Subject: [PATCH] Replace ThirdPartyLlmPanelCoordinator with GrazieCoordinator

This patch replaces the existing ThirdPartyLlmPanelCoordinator with 
GrazieCoordinator, which provides unified access to AI providers through 
JetBrains' Grazie platform instead of embedding external websites.

Key changes:
- Replace ThirdPartyLlmPanelCoordinator with GrazieCoordinator
- Use WebUI-based chat interface instead of embedded web views
- Integrate with Grazie preferences system
- Maintain the same keyboard shortcuts and toolbar integration
- Keep existing copy functionality for page content

---
 chrome/browser/ui/browser_command_controller.cc   |  8 +++---
 chrome/browser/ui/views/side_panel/BUILD.gn       |  4 +--
 chrome/browser/ui/views/side_panel/side_panel_prefs.cc |  6 ++--
 chrome/browser/ui/views/side_panel/side_panel_util.cc  |  8 +++---
 4 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/chrome/browser/ui/browser_command_controller.cc b/chrome/browser/ui/browser_command_controller.cc
index 6f2feda3e..89d6e7b12 100644
--- a/chrome/browser/ui/browser_command_controller.cc
+++ b/chrome/browser/ui/browser_command_controller.cc
@@ -68,7 +68,7 @@
 #include "chrome/browser/ui/views/side_panel/side_panel_entry_id.h"
 #include "chrome/browser/ui/views/side_panel/side_panel_enums.h"
 #include "chrome/browser/ui/views/side_panel/side_panel_ui.h"
-#include "chrome/browser/ui/views/side_panel/third_party_llm/third_party_llm_panel_coordinator.h"
+#include "chrome/browser/ui/views/side_panel/grazie/grazie_coordinator.h"
 #include "chrome/browser/ui/web_applications/app_browser_controller.h"
 #include "chrome/browser/ui/web_applications/web_app_dialog_utils.h"
 #include "chrome/browser/ui/web_applications/web_app_launch_utils.h"
@@ -914,15 +914,15 @@ bool BrowserCommandController::ExecuteCommandWithDisposition(
           SidePanelEntryId::kBookmarks, SidePanelOpenTrigger::kAppMenu);
       break;
     case IDC_SHOW_THIRD_PARTY_LLM_SIDE_PANEL:
-      if (base::FeatureList::IsEnabled(features::kThirdPartyLlmPanel)) {
+      if (base::FeatureList::IsEnabled(features::kGraziePanel)) {
         browser_->GetFeatures().side_panel_ui()->Toggle(
             SidePanelEntry::Key(SidePanelEntryId::kThirdPartyLlm),
             SidePanelOpenTrigger::kAppMenu);
       }
       break;
     case IDC_CYCLE_THIRD_PARTY_LLM_PROVIDER:
-      if (base::FeatureList::IsEnabled(features::kThirdPartyLlmPanel)) {
-        if (ThirdPartyLlmPanelCoordinator* coordinator = 
-            ThirdPartyLlmPanelCoordinator::FromBrowser(browser_)) {
-          coordinator->CycleProvider();
+      if (base::FeatureList::IsEnabled(features::kGraziePanel)) {
+        if (GrazieCoordinator* coordinator = 
+            GrazieCoordinator::FromBrowser(browser_)) {
+          coordinator->CycleModel();
         }
       }
       break;
@@ -1567,10 +1567,10 @@ void BrowserCommandController::InitCommandState() {
 
   command_updater_.UpdateCommandEnabled(IDC_SHOW_BOOKMARK_SIDE_PANEL, true);
   command_updater_.UpdateCommandEnabled(IDC_SHOW_THIRD_PARTY_LLM_SIDE_PANEL,
-                                        base::FeatureList::IsEnabled(features::kThirdPartyLlmPanel));
+                                        base::FeatureList::IsEnabled(features::kGraziePanel));
   command_updater_.UpdateCommandEnabled(IDC_CYCLE_THIRD_PARTY_LLM_PROVIDER,
-                                        base::FeatureList::IsEnabled(features::kThirdPartyLlmPanel));
+                                        base::FeatureList::IsEnabled(features::kGraziePanel));
 
   if (browser_->is_type_normal()) {
     // Reading list commands.
diff --git a/chrome/browser/ui/views/side_panel/BUILD.gn b/chrome/browser/ui/views/side_panel/BUILD.gn
index 2af616e..b7c8426 100644
--- a/chrome/browser/ui/views/side_panel/BUILD.gn
+++ b/chrome/browser/ui/views/side_panel/BUILD.gn
@@ -88,8 +88,8 @@ source_set("side_panel") {
     "side_panel_util.h",
     "side_panel_web_ui_view.cc",
     "side_panel_web_ui_view.h",
-    "third_party_llm/third_party_llm_panel_coordinator.cc",
-    "third_party_llm/third_party_llm_panel_coordinator.h",
+    "grazie/grazie_coordinator.cc",
+    "grazie/grazie_coordinator.h",
   ]
   public_deps = [
     "//base",
diff --git a/chrome/browser/ui/views/side_panel/side_panel_prefs.cc b/chrome/browser/ui/views/side_panel/side_panel_prefs.cc
index 2c6ba65..c8e1b0d 100644
--- a/chrome/browser/ui/views/side_panel/side_panel_prefs.cc
+++ b/chrome/browser/ui/views/side_panel/side_panel_prefs.cc
@@ -7,7 +7,7 @@
 #include "base/feature_list.h"
 #include "base/i18n/rtl.h"
 #include "chrome/browser/ui/ui_features.h"
-#include "chrome/browser/ui/views/side_panel/third_party_llm/third_party_llm_panel_coordinator.h"
+#include "chrome/browser/ui/views/side_panel/grazie/grazie_coordinator.h"
 #include "chrome/common/pref_names.h"
 #include "components/pref_registry/pref_registry_syncable.h"
 #include "components/prefs/pref_registry_simple.h"
@@ -24,9 +24,9 @@ void RegisterProfilePrefs(user_prefs::PrefRegistrySyncable* registry) {
   registry->RegisterBooleanPref(prefs::kGoogleSearchSidePanelEnabled, true);
   registry->RegisterDictionaryPref(prefs::kSidePanelIdToWidth);
   
-  // Register third-party LLM panel preferences
-  if (base::FeatureList::IsEnabled(features::kThirdPartyLlmPanel)) {
-    ThirdPartyLlmPanelCoordinator::RegisterProfilePrefs(registry);
+  // Register Grazie panel preferences
+  if (base::FeatureList::IsEnabled(features::kGraziePanel)) {
+    GrazieCoordinator::RegisterProfilePrefs(registry);
   }
 }
 
diff --git a/chrome/browser/ui/views/side_panel/side_panel_util.cc b/chrome/browser/ui/views/side_panel/side_panel_util.cc
index f93a373..9c5e1d2 100644
--- a/chrome/browser/ui/views/side_panel/side_panel_util.cc
+++ b/chrome/browser/ui/views/side_panel/side_panel_util.cc
@@ -20,7 +20,7 @@
 #include "chrome/browser/ui/views/side_panel/history_clusters/history_clusters_side_panel_coordinator.h"
 #include "chrome/browser/ui/views/side_panel/reading_list/reading_list_side_panel_coordinator.h"
 #include "chrome/browser/ui/views/side_panel/side_panel_content_proxy.h"
-#include "chrome/browser/ui/views/side_panel/third_party_llm/third_party_llm_panel_coordinator.h"
+#include "chrome/browser/ui/views/side_panel/grazie/grazie_coordinator.h"
 #include "chrome/browser/ui/views/side_panel/side_panel_coordinator.h"
 #include "chrome/browser/ui/views/side_panel/side_panel_registry.h"
 #include "chrome/browser/ui/views/side_panel/side_panel_ui.h"
@@ -56,9 +56,9 @@ void SidePanelUtil::PopulateGlobalEntries(Browser* browser,
         ->CreateAndRegisterEntry(window_registry);
   }
 
-  // Add third-party LLM panel.
-  if (base::FeatureList::IsEnabled(features::kThirdPartyLlmPanel)) {
-    ThirdPartyLlmPanelCoordinator::GetOrCreateForBrowser(browser)
+  // Add Grazie panel.
+  if (base::FeatureList::IsEnabled(features::kGraziePanel)) {
+    GrazieCoordinator::GetOrCreateForBrowser(browser)
         ->CreateAndRegisterEntry(window_registry);
   }
 }
-- 
2.39.0 