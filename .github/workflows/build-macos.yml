name: Build BrowserOS with Grazie Integration (macOS)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-13
    timeout-minutes: 480  # 8 hours for Chromium build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install dependencies
      run: |
        # Install Xcode command line tools
        xcode-select --install 2>/dev/null || true
        
        # Install Python 3
        brew install python@3.11
        
        # Install Node.js for build tools
        brew install node
        
        # Install additional build dependencies
        brew install ninja
        
    - name: Setup Python environment
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt
        
    - name: Download Chromium source
      run: |
        # Create directory structure
        mkdir -p chromium
        cd chromium
        
        # Download depot_tools
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        export PATH="$PWD/depot_tools:$PATH"
        
        # Fetch Chromium source
        fetch --nohooks chromium
        
        # Check out specific version
        cd src
        git checkout $(cat ../../CHROMIUM_VERSION)
        
        # Run hooks to download additional dependencies
        gclient runhooks
        
    - name: Apply Grazie patches
      run: |
        cd chromium/src
        
        # Copy BrowserOS files to Chromium source
        cp -r ../../chrome ./
        cp -r ../../chromium_src ./
        cp -r ../../resources ./
        
        # Apply patches
        for patch in ../../patches/grazie/*.patch; do
          if [ -f "$patch" ]; then
            echo "Applying patch: $patch"
            git apply "$patch" || echo "Patch $patch failed, continuing..."
          fi
        done
        
    - name: Configure build
      run: |
        cd chromium/src
        export PATH="$PWD/../depot_tools:$PATH"
        
        # Generate build configuration
        gn gen out/Release --args='
          is_debug=false
          is_component_build=false
          symbol_level=0
          enable_nacl=false
          remove_webcore_debug_symbols=true
          proprietary_codecs=true
          ffmpeg_branding="Chrome"
          is_official_build=true
          chrome_pgo_phase=0
          use_thin_lto=false
          target_cpu="x64"
          mac_deployment_target="10.15"
          enable_grazie_integration=true
        '
        
    - name: Build BrowserOS
      run: |
        cd chromium/src
        export PATH="$PWD/../depot_tools:$PATH"
        
        # Build the browser
        ninja -C out/Release chrome
        
    - name: Package application
      run: |
        cd chromium/src
        
        # Create app bundle
        mkdir -p BrowserOS-Grazie.app/Contents/MacOS
        mkdir -p BrowserOS-Grazie.app/Contents/Resources
        
        # Copy built files
        cp out/Release/BrowserOS BrowserOS-Grazie.app/Contents/MacOS/
        cp -r out/Release/*.dylib BrowserOS-Grazie.app/Contents/MacOS/ || true
        cp -r out/Release/BrowserOS.app/Contents/Resources/* BrowserOS-Grazie.app/Contents/Resources/ || true
        
        # Create Info.plist
        cat > BrowserOS-Grazie.app/Contents/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>CFBundleName</key>
          <string>BrowserOS-Grazie</string>
          <key>CFBundleIdentifier</key>
          <string>com.ashchupliak.browseros-grazie</string>
          <key>CFBundleVersion</key>
          <string>1.0.0</string>
          <key>CFBundleExecutable</key>
          <string>BrowserOS</string>
          <key>LSMinimumSystemVersion</key>
          <string>10.15</string>
        </dict>
        </plist>
        EOF
        
        # Create DMG
        hdiutil create -volname "BrowserOS-Grazie" -srcfolder BrowserOS-Grazie.app -ov -format UDZO BrowserOS-Grazie.dmg
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: BrowserOS-Grazie-macOS
        path: chromium/src/BrowserOS-Grazie.dmg
        
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.0-grazie-${{ github.run_number }}
        name: "BrowserOS with Grazie Integration v1.0.0"
        body: |
          # BrowserOS with Grazie Integration
          
          This release includes complete Grazie platform integration:
          
          ## ðŸš€ New Features:
          - âœ… **Unified AI Access** through Grazie platform
          - âœ… **Single JWT Token** configuration (no more multiple API keys)
          - âœ… **Dynamic Model Discovery** from Grazie
          - âœ… **Environment Selection** (staging/production)
          - âœ… **Modern Chat Interface** with native WebUI
          - âœ… **Settings Integration** with Grazie branding
          - âœ… **Preserved Shortcuts** (âŒ˜â‡§L toggle, âŒ˜â‡§; cycle)
          
          ## ðŸ“¦ Installation:
          1. Download `BrowserOS-Grazie.dmg`
          2. Open the DMG file
          3. Drag BrowserOS-Grazie to Applications
          4. Launch and configure your Grazie JWT token
          
          ## ðŸ”§ Configuration:
          - Go to `chrome://settings/grazie`
          - Enter your Grazie JWT token
          - Select environment (staging/production)
          - Choose your preferred models
          
          Built from commit ${{ github.sha }}
        files: |
          chromium/src/BrowserOS-Grazie.dmg
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 